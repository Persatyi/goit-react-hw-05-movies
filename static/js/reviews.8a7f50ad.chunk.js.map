{"version":3,"file":"static/js/reviews.8a7f50ad.chunk.js","mappings":"kMAmCA,UA/BgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAOA,OALAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,QAAcN,EACdM,EAAAA,EAAAA,kBAAsB,WAAWC,KAAKH,KACrC,CAACJ,KAGF,wBACGG,EAAQK,OACPL,EAAQM,KAAI,YAA8C,IAA3CC,EAA0C,EAA1CA,OAAQC,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,eAAgBC,EAAS,EAATA,GAC9C,OACE,2BACE,wBAAKH,GAAUE,EAAeE,QAC9B,uBACGH,GAAW,oDAHPE,OASb,yBACE","sources":["components/Views/Reviews/Reviews.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport api from 'components/services/ApiService';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    api.movieId = movieId;\n    api.fetchMovieReviews('reviews').then(setReviews);\n  }, [movieId]);\n\n  return (\n    <ul>\n      {reviews.length ? (\n        reviews.map(({ author, content, author_details, id }) => {\n          return (\n            <li key={id}>\n              <h3>{author || author_details.name}</h3>\n              <p>\n                {content || 'oops, there is no content from this author...'}\n              </p>\n            </li>\n          );\n        })\n      ) : (\n        <li>\n          <p>We don't have any reviews for this movie</p>\n        </li>\n      )}\n    </ul>\n  );\n};\n\nexport default Reviews;\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","api","then","length","map","author","content","author_details","id","name"],"sourceRoot":""}